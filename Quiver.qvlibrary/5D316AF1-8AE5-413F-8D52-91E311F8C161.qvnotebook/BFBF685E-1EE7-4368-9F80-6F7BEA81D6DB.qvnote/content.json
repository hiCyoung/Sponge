{
  "title": "Why use PreparedStatement in Java JDBC – Example Tutorial",
  "cells": [
    {
      "type": "text",
      "data": "<div class=\"MsoNormal\" style=\"font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 16px; margin: 0.667rem 0px; font-variant-ligatures: normal; font-variant-east-asian: normal; font-variant-position: normal; color: rgb(51, 51, 51); widows: 1;\"><b><span style=\"font-family: 'Courier New'; font-size: 9pt;\">PreparedStatement</span></b><b><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;in Java</span></b><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;is one of several ways to execute SQL queries using JDBC API. Java provides&nbsp;</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">Statement</span><span style=\"font-family: Arial; font-size: 9pt;\">,</span></div><div class=\"MsoNormal\" style=\"font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 16px; margin: 0.667rem 0px; font-variant-ligatures: normal; font-variant-east-asian: normal; font-variant-position: normal; color: rgb(51, 51, 51); widows: 1;\"><span style=\"font-family: 'Courier New'; font-size: 9pt;\">PreparedStatement</span><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;and&nbsp;</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">CallableStatement</span><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;for executing queries. Out of these three,&nbsp;</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">Statement</span><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;is used for general purpose queries,&nbsp;</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">PreparedStatement</span><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;is used for executing parametric query and&nbsp;</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">CallableStatement</span><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;is used for executing Stored Procedures.&nbsp;</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">PreparedStatement&nbsp;</span><span style=\"font-family: Arial; font-size: 9pt;\">is also a popular topic in java interviews. Questions like<b>Difference between&nbsp;</b></span><b><span style=\"font-family: 'Courier New'; font-size: 9pt;\">Statement</span></b><b><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;and&nbsp;</span></b><b><span style=\"font-family: 'Courier New'; font-size: 9pt;\">PreparedStatement</span></b><b><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;in Java</span></b><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;and&nbsp;<b>How to prevent SQL Injection attacks in Java</b>are&nbsp;<a href=\"http://javarevisited.blogspot.com/2011/04/top-20-core-java-interview-questions.html\" style=\"color: rgb(102, 0, 153);\">popular java interview questions</a>. In this Java JDBC tutorial we will see why should you use use&nbsp;</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">PreparedStatement</span><span style=\"font-family: Arial; font-size: 9pt;\">in Java, What are the major advantages of using&nbsp;</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">PreparedStatement</span><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;in Java and how&nbsp;</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">PreparedStatement</span><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;prevents SQL Injection attacks in Java.</span></div><div class=\"MsoNormal\" style=\"font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 16px; margin: 0.667rem 0px; font-variant-ligatures: normal; font-variant-east-asian: normal; font-variant-position: normal; color: rgb(51, 51, 51); widows: 1;\"><span style=\"font-family: Arial; font-size: 9pt;\">This article is in continuation of my earlier post on database and java like&nbsp;<a href=\"http://javarevisited.blogspot.com/2012/01/improve-performance-java-database.html\" style=\"color: rgb(102, 0, 153);\">4 tips to improve performance of Java application with database</a>&nbsp;and&nbsp;<a href=\"http://javarevisited.blogspot.com/2011/10/how-to-use-truncate-and-delete-command.html\" style=\"color: rgb(102, 0, 153);\">Difference between truncate and delete in SQL</a>.If you haven’t read&nbsp; them already you may found&nbsp; those tutorial useful and interesting.</span><br><a name=\"more\"></a></div><h2 style=\"margin: 1.33rem 0px 0.667rem; padding: 0px; font-size: 1.33rem; font-variant-ligatures: normal; font-variant-east-asian: normal; font-variant-position: normal; color: rgb(51, 51, 51); font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; widows: 1;\"><u><span style=\"font-weight: normal;\">What is&nbsp;</span></u><u><span style=\"font-family: 'Courier New'; font-weight: normal;\">PreparedStatement</span></u><u><span style=\"font-weight: normal;\">&nbsp;in Java</span></u></h2><div class=\"separator\" style=\"font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 16px; margin: 0.667rem 0px; font-variant-ligatures: normal; font-variant-east-asian: normal; font-variant-position: normal; color: rgb(51, 51, 51); widows: 1; clear: both; text-align: center;\"><a href=\"http://javarevisited.blogspot.com/2012/03/why-character-array-is-better-than.html\" imageanchor=\"1\" style=\"color: rgb(102, 0, 153); clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\"><span style=\"color: rgb(51, 51, 51); font-family: 'Courier New'; font-size: 9pt;\">PreparedStatement</span><span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 9pt;\">&nbsp;is a class in java.sql package and allows Java programmer to execute SQL queries by using JDBC package. You can get&nbsp;</span><span style=\"color: rgb(51, 51, 51); font-family: 'Courier New'; font-size: 9pt;\">PreparedStatement</span><span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 9pt;\">&nbsp;object by calling</span><span style=\"color: rgb(51, 51, 51); font-family: 'Courier New'; font-size: 9pt;\">connection.prepareStatement()</span><span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 9pt;\">&nbsp;method.SQL queries passed to this method goes to&nbsp;<a href=\"http://javarevisited.blogspot.com/2011/11/database-transaction-tutorial-example.html\" style=\"color: rgb(102, 0, 153);\">Database</a>&nbsp;for pre-compilation if JDBC driver supports it. If it doesn't than pre-compilation occurs when you execute prepared queries. Prepared Statement queries are&nbsp;<b>pre-compiled on database</b>&nbsp;and there access plan will be reused to execute further queries which allows them to execute much quicker than normal queries generated by&nbsp;</span><span style=\"color: rgb(51, 51, 51); font-family: 'Courier New'; font-size: 9pt;\">Statement</span><span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 9pt;\">&nbsp;object. Here is an&nbsp;<b>example of how to use&nbsp;</b></span><b style=\"color: rgb(51, 51, 51); font-size: 16px;\"><span style=\"font-family: 'Courier New'; font-size: 9pt;\">PreparedStatement</span></b><b style=\"color: rgb(51, 51, 51); font-size: 16px;\"><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;in Java</span></b><span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 9pt;\">:</span></a></div><div style=\"font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 16px; margin: 0.667rem 0px; font-variant-ligatures: normal; font-variant-east-asian: normal; font-variant-position: normal; color: rgb(51, 51, 51); widows: 1; border: 1pt dotted windowtext; padding: 1pt 4pt; background-color: rgb(243, 243, 243);\"><div class=\"MsoNormal\" style=\"font-family: 'Helvetica Neue'; font-size: 15px; margin: 0.667rem 0px; border: none; padding: 0in;\"><b><span style=\"color: black; font-family: 'Courier New'; font-size: 9pt;\">public</span></b><span style=\"font-family: 'Courier New'; font-size: 9pt;\">&nbsp;<b><span style=\"color: black;\">class</span></b>&nbsp;PreparedStmtExample&nbsp;<span style=\"color: rgb(0, 153, 0);\">{</span><br><br>&nbsp; &nbsp;&nbsp;<b><span style=\"color: black;\">public</span></b>&nbsp;<b><span style=\"color: black;\">static</span></b>&nbsp;<b><span style=\"color: rgb(0, 102, 0);\">void</span></b>&nbsp;main<span style=\"color: rgb(0, 153, 0);\">(</span><b>String</b>&nbsp;args<span style=\"color: rgb(0, 153, 0);\">[])</span>&nbsp;<b><span style=\"color: black;\">throws</span></b>&nbsp;<b>SQLException</b>&nbsp;<span style=\"color: rgb(0, 153, 0);\">{</span><br>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<b>Connection</b>&nbsp;conn =&nbsp;<b>DriverManager</b>.<span style=\"color: rgb(0, 102, 51);\">getConnection</span><span style=\"color: rgb(0, 153, 0);\">(</span><span style=\"color: blue;\">\"mysql:</span><b><span style=\"color: rgb(0, 0, 153);\">\\\\</span></b><span style=\"color: blue;\">localhost:1520\"</span>,&nbsp;<span style=\"color: blue;\">\"root\"</span>,<span style=\"color: blue;\">\"root\"</span><span style=\"color: rgb(0, 153, 0);\">)</span><span style=\"color: rgb(51, 153, 51);\">;</span><br>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<a href=\"http://java.sun.com/j2se/1.5.0/docs/api/java/sql/PreparedStatement.html\" style=\"color: rgb(102, 0, 153);\"><b><span style=\"color: rgb(0, 51, 153);\">PreparedStatement</span></b></a>&nbsp;preStatement = conn.<span style=\"color: rgb(0, 102, 51);\">prepareStatement</span><span style=\"color: rgb(0, 153, 0);\">(</span><span style=\"color: blue;\">\"select distinct loan_type from loan where bank=?\"</span><span style=\"color: rgb(0, 153, 0);\">)</span><span style=\"color: rgb(51, 153, 51);\">;</span><br>&nbsp; &nbsp; &nbsp; &nbsp; preStatement.<span style=\"color: rgb(0, 102, 51);\">setString</span><span style=\"color: rgb(0, 153, 0);\">(</span><span style=\"color: rgb(204, 102, 204);\">1</span>,&nbsp;<span style=\"color: blue;\">\"Citibank\"</span><span style=\"color: rgb(0, 153, 0);\">)</span><span style=\"color: rgb(51, 153, 51);\">;</span><br>&nbsp; &nbsp;&nbsp;<br>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<b>ResultSet</b>&nbsp;result = preStatement.<span style=\"color: rgb(0, 102, 51);\">executeQuery</span><span style=\"color: rgb(0, 153, 0);\">()</span><span style=\"color: rgb(51, 153, 51);\">;</span><br>&nbsp; &nbsp; &nbsp;&nbsp;<br>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span style=\"color: black;\">while</span><span style=\"color: rgb(0, 153, 0);\">(</span>result.<span style=\"color: rgb(0, 102, 51);\">next</span><span style=\"color: rgb(0, 153, 0);\">()){</span><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<b>System</b>.<span style=\"color: rgb(0, 102, 51);\">out</span>.<span style=\"color: rgb(0, 102, 51);\">println</span><span style=\"color: rgb(0, 153, 0);\">(</span><span style=\"color: blue;\">\"Loan Type: \"</span>&nbsp;+ result.<span style=\"color: rgb(0, 102, 51);\">getString</span><span style=\"color: rgb(0, 153, 0);\">(</span><span style=\"color: blue;\">\"loan_type\"</span><span style=\"color: rgb(0, 153, 0);\">))</span><span style=\"color: rgb(51, 153, 51);\">;</span><br>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span style=\"color: rgb(0, 153, 0);\">}</span>&nbsp;&nbsp; &nbsp; &nbsp;&nbsp;<br>&nbsp; &nbsp;&nbsp;<span style=\"color: rgb(0, 153, 0);\">}</span><br><span style=\"color: rgb(0, 153, 0);\">}</span>&nbsp;</span><br><span style=\"font-family: 'Courier New'; font-size: 9pt;\"><b>Output:</b><br>Loan&nbsp;<b>Type</b>: Personal Loan<br>Loan&nbsp;<b>Type</b>: Auto Loan<br>Loan&nbsp;<b>Type</b>: Home Loan<br>Loan&nbsp;<b>Type</b>: Gold Loan<span style=\"color: blue;\"></span></span></div></div><div class=\"MsoNormal\" style=\"font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 16px; margin: 0.667rem 0px; font-variant-ligatures: normal; font-variant-east-asian: normal; font-variant-position: normal; color: rgb(51, 51, 51); widows: 1;\"><span style=\"font-family: Arial; font-size: 9pt;\">In this example of&nbsp;</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">PreparedStatement</span><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;same query and access path will be used if you pass a different parameter&nbsp; e.g.</span></div><div class=\"MsoNormal\" style=\"font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 16px; margin: 0.667rem 0px; font-variant-ligatures: normal; font-variant-east-asian: normal; font-variant-position: normal; color: rgb(51, 51, 51); widows: 1;\"><span style=\"font-family: Arial; font-size: 9pt;\">\"</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">Standard Charted</span><span style=\"font-family: Arial; font-size: 9pt;\">\" or \"</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">HSBC</span><span style=\"font-family: Arial; font-size: 9pt;\">\".&nbsp;</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">ResultSet</span><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;returned by prepared statement execution is of \"</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">TYPE_FORWARD_ONLY</span><span style=\"font-family: Arial; font-size: 9pt;\">\" but can be customized by using&nbsp;<a href=\"http://javarevisited.blogspot.com/2011/12/method-overloading-vs-method-overriding.html\" style=\"color: rgb(102, 0, 153);\">overloaded method</a>&nbsp;of&nbsp;</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">prepareStatement()</span><span style=\"font-family: Arial; font-size: 9pt;\">.</span></div><h2 style=\"margin: 1.33rem 0px 0.667rem; padding: 0px; font-size: 1.33rem; font-variant-ligatures: normal; font-variant-east-asian: normal; font-variant-position: normal; color: rgb(51, 51, 51); font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; widows: 1;\"><u><span style=\"font-weight: normal;\">Benefits of Java Prepared Statement</span></u></h2><div class=\"MsoNormal\" style=\"font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 16px; margin: 0.667rem 0px; font-variant-ligatures: normal; font-variant-east-asian: normal; font-variant-position: normal; color: rgb(51, 51, 51); widows: 1;\"><span style=\"font-family: 'Courier New'; font-size: 9pt;\">PreparedStatement</span><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;in Java JDBC offers several benefits and it’s a recommended way to execute SQL queries in any enterprise Java application or in production code. Here are few&nbsp;<b><i>advantages of using&nbsp;</i></b></span><b><i><span style=\"font-family: 'Courier New'; font-size: 9pt;\">PreparedStatement&nbsp;</span></i></b><b><i><span style=\"font-family: Arial; font-size: 9pt;\">in Java</span></i></b><span style=\"font-family: Arial; font-size: 9pt;\">:</span></div><div class=\"MsoNormal\" style=\"font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 16px; margin: 0.667rem 0px; font-variant-ligatures: normal; font-variant-east-asian: normal; font-variant-position: normal; color: rgb(51, 51, 51); widows: 1;\"><span style=\"font-family: Arial; font-size: 9pt;\">1.&nbsp;</span><b><span style=\"font-family: 'Courier New'; font-size: 9pt;\">PreparedStatement</span></b><b><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;allows you to write dynamic and parametric query</span></b><span style=\"font-family: Arial; font-size: 9pt;\">.</span></div><div class=\"MsoNormal\" style=\"font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 16px; margin: 0.667rem 0px; font-variant-ligatures: normal; font-variant-east-asian: normal; font-variant-position: normal; color: rgb(51, 51, 51); widows: 1;\"><span style=\"font-family: Arial; font-size: 9pt;\">By using&nbsp;</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">PreparedStatement</span><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;in Java you can write parametrized sql queries and send different parameters by using same sql queries which is lot better than creating different queries. Here is an example of parametric query written using</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">PreparedStatement</span><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;in java:</span></div><div style=\"font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 16px; margin: 0.667rem 0px; font-variant-ligatures: normal; font-variant-east-asian: normal; font-variant-position: normal; color: rgb(51, 51, 51); widows: 1; border: 1pt dotted windowtext; padding: 1pt 4pt; background-color: rgb(243, 243, 243);\"><div class=\"MsoNormal\" style=\"font-family: 'Helvetica Neue'; font-size: 15px; margin: 0.667rem 0px; border: none; padding: 0in;\"><b><span style=\"font-family: 'Courier New'; font-size: 9pt;\">select</span></b><span style=\"font-family: 'Courier New'; font-size: 9pt;\">&nbsp;interest_rate&nbsp;<b>from</b>&nbsp;loan where loan_type=<span style=\"color: rgb(51, 153, 51);\">?</span></span></div></div><div class=\"MsoNormal\" style=\"font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 16px; margin: 0.667rem 0px; font-variant-ligatures: normal; font-variant-east-asian: normal; font-variant-position: normal; color: rgb(51, 51, 51); widows: 1;\"><span style=\"font-family: Arial; font-size: 9pt;\">Now you can run this query for any loan type e.g. \"</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">personal loan</span><span style=\"font-family: Arial; font-size: 9pt;\">”, \"</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">home loan</span><span style=\"font-family: Arial; font-size: 9pt;\">\" or \"</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">gold loan</span><span style=\"font-family: Arial; font-size: 9pt;\">\". This&nbsp;<a href=\"http://javarevisited.blogspot.com/2011/10/selct-command-sql-query-example.html\" style=\"color: rgb(102, 0, 153);\">example of SELECT query</a>&nbsp;is called parametric or parametrized query because it can be invoked with different parameter. Here&nbsp;</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">“?”</span><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;is used as place holder for parameter.</span></div><div class=\"MsoNormal\" style=\"font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 16px; margin: 0.667rem 0px; font-variant-ligatures: normal; font-variant-east-asian: normal; font-variant-position: normal; color: rgb(51, 51, 51); widows: 1;\"><span style=\"font-family: Arial; font-size: 9pt;\">2.&nbsp;</span><b><span style=\"font-family: 'Courier New'; font-size: 9pt;\">PreparedStatement</span></b><b><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;is faster than Statement in Java</span></b><span style=\"font-family: Arial; font-size: 9pt;\"></span></div><div class=\"MsoNormal\" style=\"font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 16px; margin: 0.667rem 0px; font-variant-ligatures: normal; font-variant-east-asian: normal; font-variant-position: normal; color: rgb(51, 51, 51); widows: 1;\"><span style=\"font-family: Arial; font-size: 9pt;\">One of the major benefits of using&nbsp;</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">PreparedStatement</span><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;is better performance.&nbsp;</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">PreparedStatement</span><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;gets pre compiled</span></div><div class=\"MsoNormal\" style=\"font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 16px; margin: 0.667rem 0px; font-variant-ligatures: normal; font-variant-east-asian: normal; font-variant-position: normal; color: rgb(51, 51, 51); widows: 1;\"><span style=\"font-family: Arial; font-size: 9pt;\">In database and there access plan is also cached in database, which allows database to execute parametric query written using prepared statement much faster than normal query because it has less work to do. You should always try to use</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">PreparedStatement</span><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;in production JDBC code to reduce load on database. In order to get performance benefit its worth noting to&nbsp;<b>use only parametrized version of sql query</b>&nbsp;and not with&nbsp;<a href=\"http://javarevisited.blogspot.com/2011/07/string-vs-stringbuffer-vs-stringbuilder.html\" style=\"color: rgb(102, 0, 153);\"><span style=\"font-family: 'Courier New';\">string</span>&nbsp;concatenation</a>. Out of following two examples of SELECT queries, first example of SELECT query&nbsp; will not offer any performance benefit:</span></div><div class=\"MsoNormal\" style=\"font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 16px; margin: 0.667rem 0px; font-variant-ligatures: normal; font-variant-east-asian: normal; font-variant-position: normal; color: rgb(51, 51, 51); widows: 1;\"><span style=\"font-family: Arial; font-size: 9pt;\">SQL Query 1:&nbsp;</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">PreparedStatement</span><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;with&nbsp;</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">String</span><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;concatenation</span></div><div style=\"font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 16px; margin: 0.667rem 0px; font-variant-ligatures: normal; font-variant-east-asian: normal; font-variant-position: normal; color: rgb(51, 51, 51); widows: 1; border: 1pt dotted windowtext; padding: 1pt 4pt; background-color: rgb(243, 243, 243);\"><div class=\"MsoNormal\" style=\"font-family: 'Helvetica Neue'; font-size: 15px; margin: 0.667rem 0px; border: none; padding: 0in;\"><b><span style=\"font-family: 'Courier New'; font-size: 9pt;\">String</span></b><span style=\"font-family: 'Courier New'; font-size: 9pt;\">&nbsp;loanType = getLoanType<span style=\"color: rgb(0, 153, 0);\">()</span><span style=\"color: rgb(51, 153, 51);\">;</span><br><b>PreparedStatement</b>&nbsp;prestmt = conn.<span style=\"color: rgb(0, 102, 51);\">prepareStatement</span><span style=\"color: rgb(0, 153, 0);\">(</span><span style=\"color: blue;\">\"select banks from loan where loan_type=\"</span>&nbsp;+ loanType<span style=\"color: rgb(0, 153, 0);\">)</span><span style=\"color: rgb(51, 153, 51);\">;</span></span></div></div><div class=\"MsoNormal\" style=\"font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 16px; margin: 0.667rem 0px; font-variant-ligatures: normal; font-variant-east-asian: normal; font-variant-position: normal; color: rgb(51, 51, 51); widows: 1;\"><span style=\"font-family: Arial; font-size: 9pt;\">SQL Query 2: Parameterized query using&nbsp;</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">PreparedStatement</span><span style=\"font-family: Arial; font-size: 9pt;\"></span></div><div style=\"font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 16px; margin: 0.667rem 0px; font-variant-ligatures: normal; font-variant-east-asian: normal; font-variant-position: normal; color: rgb(51, 51, 51); widows: 1; border: 1pt dotted windowtext; padding: 1pt 4pt; background-color: rgb(243, 243, 243);\"><div class=\"MsoNormal\" style=\"font-family: 'Helvetica Neue'; font-size: 15px; margin: 0.667rem 0px; border: none; padding: 0in;\"><b><span style=\"font-family: 'Courier New'; font-size: 9pt;\">PreparedStatement</span></b><span style=\"font-family: 'Courier New'; font-size: 9pt;\">&nbsp;prestmt = conn.<span style=\"color: rgb(0, 102, 51);\">prepareStatement</span><span style=\"color: rgb(0, 153, 0);\">(</span><span style=\"color: blue;\">\"select banks from loan where loan_type=?\"</span><span style=\"color: rgb(0, 153, 0);\">)</span><span style=\"color: rgb(51, 153, 51);\">;</span><br>prestmt.<span style=\"color: rgb(0, 102, 51);\">setString</span><span style=\"color: rgb(0, 153, 0);\">(</span><span style=\"color: rgb(204, 102, 204);\">1</span>,loanType<span style=\"color: rgb(0, 153, 0);\">)</span><span style=\"color: rgb(51, 153, 51);\">;</span></span></div></div><div class=\"MsoNormal\" style=\"font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 16px; margin: 0.667rem 0px; font-variant-ligatures: normal; font-variant-east-asian: normal; font-variant-position: normal; color: rgb(51, 51, 51); widows: 1;\"><span style=\"font-family: Arial; font-size: 9pt;\">Second SQL query is correct use of&nbsp;</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">PreparedStatement</span><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;in Java and give better performance than SQL query1.</span></div><div class=\"MsoNormal\" style=\"font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 16px; margin: 0.667rem 0px; font-variant-ligatures: normal; font-variant-east-asian: normal; font-variant-position: normal; color: rgb(51, 51, 51); widows: 1;\"><span style=\"font-family: Arial; font-size: 9pt;\">3.&nbsp;</span><b><span style=\"font-family: 'Courier New'; font-size: 9pt;\">PreparedStatement</span></b><b><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;prevents SQL Injection attacks in Java</span></b><span style=\"font-family: Arial; font-size: 9pt;\"></span></div><div class=\"MsoNormal\" style=\"font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 16px; margin: 0.667rem 0px; font-variant-ligatures: normal; font-variant-east-asian: normal; font-variant-position: normal; color: rgb(51, 51, 51); widows: 1;\"><span style=\"font-family: Arial; font-size: 9pt;\">If you have been working in Java web application you must be familiar with infamous SQL Injection attacks, last year Sony got victim of SQL injection and compromised several Sony play station user data. In SQL Injection attack, malicious user pass&nbsp;<b>SQL meta-data</b>&nbsp;combined with input which allowed them to&nbsp;<i>execute sql query of there choice,</i>&nbsp;If not validated or prevented before sending query to database. By using parametric queries and&nbsp;</span><b><span style=\"font-family: 'Courier New'; font-size: 9pt;\">PreparedStatement</span></b><b><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;you prevent many forms of SQL injection</span></b><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;because all the parameters passed as part of place-holder will be escaped automatically by JDBC Driver. Though It’s worth remembering that in above example of two&nbsp;</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">PreparedStatement</span><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;<span style=\"font-size: 9pt; color: rgb(255, 0, 0);\">only second example will prevent&nbsp;</span>SQL injection attacks and first example is not secure with SQL injection.</span></div><div class=\"MsoNormal\" style=\"font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 16px; margin: 0.667rem 0px; font-variant-ligatures: normal; font-variant-east-asian: normal; font-variant-position: normal; color: rgb(51, 51, 51); widows: 1;\"><span style=\"font-family: Arial; font-size: 9pt;\">4. At last&nbsp;</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">PreparedStatement</span><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;queries are more readable and secure than cluttered&nbsp;</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">string</span><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;concatenated queries.</span></div><h3 style=\"margin: 0px; padding: 2px 14px 2px 0px; font-size: 21.6px; font-variant-ligatures: normal; font-variant-east-asian: normal; font-variant-position: normal; color: rgb(51, 51, 51); line-height: normal; font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; widows: 1;\"><u><span style=\"font-weight: normal;\">Limitation of Java PreparedStatement</span></u></h3><div class=\"MsoNormal\" style=\"font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 16px; margin: 0.667rem 0px; font-variant-ligatures: normal; font-variant-east-asian: normal; font-variant-position: normal; color: rgb(51, 51, 51); widows: 1;\"><span style=\"font-family: Arial; font-size: 9pt;\">Despite of being very useful&nbsp;</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">PreparedStatement&nbsp;</span><span style=\"font-family: Arial; font-size: 9pt;\">also has few limitations:</span></div><div class=\"MsoNormal\" style=\"font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 16px; margin: 0.667rem 0px; font-variant-ligatures: normal; font-variant-east-asian: normal; font-variant-position: normal; color: rgb(51, 51, 51); widows: 1;\"><span style=\"font-family: Arial; font-size: 9pt;\">1. In order to prevent SQL Injection attacks in Java,&nbsp;</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">PreparedStatement</span><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;doesn't allow multiple values for one placeholder</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">(?)</span><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;who makes it tricky to execute SQL query with IN clause. Following example of SQL query with IN clause using prepared Statement will not work in Java:</span></div><div style=\"font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 16px; margin: 0.667rem 0px; font-variant-ligatures: normal; font-variant-east-asian: normal; font-variant-position: normal; color: rgb(51, 51, 51); widows: 1; border: 1pt dotted windowtext; padding: 1pt 4pt; background-color: rgb(243, 243, 243);\"><div class=\"MsoNormal\" style=\"font-family: 'Helvetica Neue'; font-size: 15px; margin: 0.667rem 0px; border: none; padding: 0in;\"><span style=\"font-family: 'Courier New'; font-size: 9pt;\">select&nbsp;<span style=\"color: rgb(51, 153, 51);\">*</span>&nbsp;from loan where loan_type IN&nbsp;<span style=\"color: rgb(0, 153, 0);\">(</span>&nbsp;<span style=\"color: rgb(51, 153, 51);\">?</span><span style=\"color: rgb(0, 153, 0);\">)</span><br>preparedSatement.<span style=\"color: rgb(0, 102, 51);\">setString</span><span style=\"color: rgb(0, 153, 0);\">(</span><span style=\"color: rgb(204, 102, 204);\">1</span>,&nbsp;<span style=\"color: blue;\">\"'personal loan', 'home loan', 'gold loan'\"</span><span style=\"color: rgb(0, 153, 0);\">)</span><span style=\"color: rgb(51, 153, 51);\">;</span></span></div></div><div class=\"MsoNormal\" style=\"font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 16px; margin: 0.667rem 0px; font-variant-ligatures: normal; font-variant-east-asian: normal; font-variant-position: normal; color: rgb(51, 51, 51); widows: 1;\"><span style=\"font-family: Arial; font-size: 9pt;\">Though there are some workarounds and ways to&nbsp;<b>execute IN queries using&nbsp;</b></span><b><span style=\"font-family: 'Courier New'; font-size: 9pt;\">PreparedStatement</span></b><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;but those are</span></div><div class=\"MsoNormal\" style=\"font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 16px; margin: 0.667rem 0px; font-variant-ligatures: normal; font-variant-east-asian: normal; font-variant-position: normal; color: rgb(51, 51, 51); widows: 1;\"><span style=\"font-family: Arial; font-size: 9pt;\">rather tricky or have performance impact.</span></div><h2 style=\"margin: 1.33rem 0px 0.667rem; padding: 0px; font-size: 1.33rem; font-variant-ligatures: normal; font-variant-east-asian: normal; font-variant-position: normal; color: rgb(51, 51, 51); font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; widows: 1;\"><u><span style=\"font-weight: normal;\">Important points on&nbsp;</span></u><u><span style=\"font-family: 'Courier New'; font-weight: normal;\">PreparedStatement</span></u><u><span style=\"font-weight: normal;\">&nbsp;in Java</span></u></h2><div class=\"MsoNormal\" style=\"font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 16px; margin: 0.667rem 0px; font-variant-ligatures: normal; font-variant-east-asian: normal; font-variant-position: normal; color: rgb(51, 51, 51); widows: 1;\"><span style=\"font-family: Arial; font-size: 9pt;\">Here are few important points about&nbsp;</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">PreparedStatement</span><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;Class in Java, worth remembering:</span></div><div class=\"MsoNormal\" style=\"font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 16px; margin: 0.667rem 0px; font-variant-ligatures: normal; font-variant-east-asian: normal; font-variant-position: normal; color: rgb(51, 51, 51); widows: 1;\"><span style=\"font-family: Arial; font-size: 9pt;\">1.&nbsp;</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">PreparedStatement</span><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;in Java allows you to write parametrized query which gives better performance than&nbsp;</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">Statement</span><span style=\"font-family: Arial; font-size: 9pt;\"><a href=\"http://javarevisited.blogspot.com/2011/10/class-in-java-programming-general.html\" style=\"color: rgb(102, 0, 153);\">class in Java</a>.</span></div><div class=\"MsoNormal\" style=\"font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 16px; margin: 0.667rem 0px; font-variant-ligatures: normal; font-variant-east-asian: normal; font-variant-position: normal; color: rgb(51, 51, 51); widows: 1;\"><span style=\"font-family: Arial; font-size: 9pt;\">2. In case of&nbsp;</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">PreparedStatement,</span><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;Database use an already compiled and defined access plan, this allows prepared statement query to run faster than normal query.</span></div><div class=\"MsoNormal\" style=\"font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 16px; margin: 0.667rem 0px; font-variant-ligatures: normal; font-variant-east-asian: normal; font-variant-position: normal; color: rgb(51, 51, 51); widows: 1;\"><span style=\"font-family: Arial; font-size: 9pt;\">3. Parametrized query written using&nbsp;</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">PreparedStatement</span><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;in Java prevents many common SQL Injection attacks.</span></div><div class=\"MsoNormal\" style=\"font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 16px; margin: 0.667rem 0px; font-variant-ligatures: normal; font-variant-east-asian: normal; font-variant-position: normal; color: rgb(51, 51, 51); widows: 1;\"><span style=\"font-family: Arial; font-size: 9pt;\">4.&nbsp;</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">PreparedStatement</span><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;allows you to write dynamic query in Java.</span></div><div class=\"MsoNormal\" style=\"font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 16px; margin: 0.667rem 0px; font-variant-ligatures: normal; font-variant-east-asian: normal; font-variant-position: normal; color: rgb(51, 51, 51); widows: 1;\"><span style=\"font-family: Arial; font-size: 9pt;\">5.&nbsp;</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">PreparedStatement</span><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;are associated with&nbsp;</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">java.sql.Connection</span><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;object, once you drop a connection all</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">PreparedStatement</span><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;&nbsp;associated with that connection will be dropped by Database.</span></div><div class=\"MsoNormal\" style=\"font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 16px; margin: 0.667rem 0px; font-variant-ligatures: normal; font-variant-east-asian: normal; font-variant-position: normal; color: rgb(51, 51, 51); widows: 1;\"><span style=\"font-family: Arial; font-size: 9pt;\">6.&nbsp;</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">\"?\"</span><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;is also called placeholder or IN parameter in Java.</span></div><div class=\"MsoNormal\" style=\"font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 16px; margin: 0.667rem 0px; font-variant-ligatures: normal; font-variant-east-asian: normal; font-variant-position: normal; color: rgb(51, 51, 51); widows: 1;\"><span style=\"font-family: Arial; font-size: 9pt;\">7.&nbsp;</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">PreparedStatement</span><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;query return FORWARD_ONLY ResultSet, so you can only move in one direction Also concurrency level of&nbsp;</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">ResultSet</span><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;would be \"CONCUR_READ_ONLY\".</span></div><div class=\"MsoNormal\" style=\"font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 16px; margin: 0.667rem 0px; font-variant-ligatures: normal; font-variant-east-asian: normal; font-variant-position: normal; color: rgb(51, 51, 51); widows: 1;\"><span style=\"font-family: Arial; font-size: 9pt;\">8. All JDBC Driver doesn't support pre compilation of SQL query in that case query is not sent to database when you call</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">prepareStatement(..)</span><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;method instead they would be sent to database when you execute&nbsp;</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">PreparedStatement</span><span style=\"font-family: Arial; font-size: 9pt;\">query.</span></div><div class=\"MsoNormal\" style=\"font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 16px; margin: 0.667rem 0px; font-variant-ligatures: normal; font-variant-east-asian: normal; font-variant-position: normal; color: rgb(51, 51, 51); widows: 1;\"><span style=\"font-family: Arial; font-size: 9pt;\">9. Index of placeholder or parameter starts with \"1\" and not with \"0\", which is common cause of&nbsp;<span class=\"MsoHyperlink\"><span style=\"color: black;\"><a href=\"http://javarevisited.blogspot.com/2012/01/javasqlsqlexception-invalid-column.html\" style=\"color: rgb(102, 0, 153);\">java.sql.SQLException: Invalid column index</a></span></span><b><span style=\"color: black;\">&nbsp;.</span></b>&nbsp;So in a&nbsp;</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">PreparedStatement</span><span style=\"font-family: Arial; font-size: 9pt;\">&nbsp;t of two placeholder, first will be referred by index 1 and second will be reference by index 2.</span></div><div class=\"MsoNormal\" style=\"font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 16px; margin: 0.667rem 0px; font-variant-ligatures: normal; font-variant-east-asian: normal; font-variant-position: normal; color: rgb(51, 51, 51); widows: 1;\"><span style=\"font-family: Arial; font-size: 9pt;\">These were the reasons Why&nbsp;</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">PreparedStatement&nbsp;</span><span style=\"font-family: Arial; font-size: 9pt;\">in java is very popular and useful. You can still use&nbsp;</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">Statement</span><span style=\"font-family: Arial; font-size: 9pt;\">object for test programmers but consider&nbsp;</span><span style=\"font-family: 'Courier New'; font-size: 9pt;\">PreparedStatement&nbsp;</span><span style=\"font-family: Arial; font-size: 9pt;\">before moving to production.</span></div>"
    }
  ]
}
{
  "title": "Mysql常用工具",
  "cells": [
    {
      "type": "markdown",
      "data": "### 查看最后死锁日志：\n\n`show engine innodb status`\n\n### 查看事务级别：\n`SELECT @@global.tx_isolation;` （全局）\n`SELECT @@tx_isolation;`\n\n### precona mysql\n设置编码\n[client]\ndefault-character-set=utf8mb4\n[mysqld]\ncharacter-set-server=utf8mb4\n\n重启 \nservice mysql restart\n\n### mysql数字格式化\n`SELECT FORMAT(12332.123456, 4);`: 12,332.1235 四舍五入加千位符\n`SELECT truncate(4545.1366,2);`: 4545.13，直接截取不四舍五入\n`SELECT convert(4545.1366,decimal);`: 4545\n`SELECT round(4545.1366,2);`: 4545.14\n`SELECT LPAD('xxx',6,'i');`: iiixxx\n`SELECT RPAD('xxx',6,'i');`: xxxiii\n`SELECT concat(round((1/3)*100,2),\"%\")` : 33.33% \n\n### between and的边界问题\nselect * from user where userId between 5 and 7;\n查询userId为5、6，7的user，userId范围是包含边界值的，也等同如下查询：\nselect * from user where userId >= 5 and userId <= 7;\n\n### order by null用途\n强制对查询结果禁用排序。通过explain检查查询语句时候，如果看到Extra列中有Using filesort，这是对性能有一定影响的，特别是使用了group by时，就算你没有显示的指定order by，mysql会默认按照分组字段进行排序。某些情况下是没有必要使用排序的，例如在处理表报数据的时候（把原始表数据统计后插入到一个用于报表查询的表），则完全可以可以使用order by null来取消排序。如：\n```SQL\ninsert into reportTable(day, clicks, revenue) select day, count(*), sum(revenue) from clickOriginTalbe  group by day  \norder by null\n```\n\n### count distinct null使用注意事项\n 1  用一个例子来讲解一个问题，现在又一个库表hello,表内容如下：\nid     name\n1      Null\n2      Null\n \nhello表一共两个字段：id和name，name is null。\n第一条SQL：SELECT COUNT(id) FROM hello;   查询结果：2，正确。\n第二条SQL：SELECT COUNT(*) FROM hello;     查询结果：2，正确。\n第三条SQL：SELECT COUNT(name) FROM hello; 查询结果：0，错误。\n第四条SQL：SELECT COUNT(DISTINCT id,name) FROM hello;查询结果：0，错误。\n\n第二条SQL和第三条SQL查询错误的原因：\n* COUNT(), MIN(), and SUM() ignore NULL values.\n* the following   statement produces two counts. The first is a count of the  number of rows in the table, and the second is a count of the  number of non-NULL values in the   age column:\n`SELECT COUNT(*), COUNT(age) FROM person`\n"
    }
  ]
}
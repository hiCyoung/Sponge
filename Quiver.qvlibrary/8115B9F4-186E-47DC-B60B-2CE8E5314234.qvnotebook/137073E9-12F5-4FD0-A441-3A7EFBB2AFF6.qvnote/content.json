{
  "title": "memcache常用命令",
  "cells": [
    {
      "type": "text",
      "data": "<p style=\"color: rgb(54, 46, 43); font-family: Arial; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><span style=\"line-height: 26px;\"><strong><span style=\"color: rgb(255, 0, 0);\">1、启动Memcache 常用参数</span></strong><br>memcached 1.4.3<br>-p &lt;num&gt;&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;设置端口号(默认不设置为: 11211)<br>-U &lt;num&gt;&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;UDP监听端口 (默认: 11211, 0 时关闭) &nbsp;<wbr><br>-l &lt;ip_addr&gt;&nbsp;<wbr>&nbsp;绑定地址 (默认:所有都允许,无论内外网或者本机更换IP，有安全隐患，若设置为127.0.0.1就只能本机访问)<br>-d&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;duli进程运行<br>-u &lt;username&gt; 绑定使用指定用于运行进程 &lt;username&gt;<br>-m &lt;num&gt;&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;允许最大内存用量，单位M (默认: 64 MB)<br>-P &lt;file&gt;&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;将PID写入文件&lt;file&gt;，这样可以使得后边进行快速进程终止, 需要与 -d 一起使用<br>如：<br>在<a href=\"http://lib.csdn.net/base/linux\" class=\"replace_word\" title=\"Linux知识库\" target=\"_blank\" style=\"color: rgb(223, 52, 52); text-decoration: none; font-weight: bold;\">Linux</a>下：./usr/local/bin/memcached -d -u jb-mc -l 192.168.1.197 -m 2048 -p 12121<br>在window下：d:\\App_Serv\\memcached\\memcached.exe -d RunService -l 127.0.0.1 -p 11211 -m 500<br>在windows下注册为服务后运行：<br>sc.exe create jb-Memcached binpath= “d:\\App_Serv\\memcached\\memcached.exe -d RunService -p 11211 -m 500″ start= auto<br>net start jb-Memcached</span></p><p style=\"color: rgb(54, 46, 43); font-family: Arial; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255); padding: 0px; line-height: 26px; margin: 0px 0px 1em;\"><span style=\"color: rgb(255, 0, 0);\"><strong>2、telnet连接</strong></span></p><p style=\"color: rgb(54, 46, 43); font-family: Arial; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255); padding: 0px; line-height: 26px; margin: 0px 0px 1em;\">telnet 127.0.0.1 11211<br></p><p style=\"color: rgb(54, 46, 43); font-family: Arial; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255); padding: 0px; line-height: 26px; margin: 0px 0px 1em;\"><strong>3、写入memcache</strong></p><p style=\"color: rgb(54, 46, 43); font-family: Arial; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 12px;\"><strong>3.1 memcached Telnet Interface</strong><br><br></span></p><p style=\"color: rgb(54, 46, 43); font-family: Arial; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"></p><table border=\"1\" style=\"color: rgb(54, 46, 43); font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255); line-height: 24px; font-family: Verdana; font-size: 11pt;\"><tbody style=\"line-height: 24px;\"><tr style=\"line-height: 24px;\"><th style=\"line-height: 24px;\">Command</th><th style=\"line-height: 24px;\">Description</th><th style=\"line-height: 24px;\">Example</th></tr><tr style=\"line-height: 24px;\"><td style=\"line-height: 24px;\">get</td><td style=\"line-height: 24px;\">Reads a value</td><td style=\"line-height: 24px;\">get mykey</td></tr><tr style=\"line-height: 24px;\"><td style=\"line-height: 24px;\">set</td><td style=\"line-height: 24px;\">Set a key unconditionally</td><td style=\"line-height: 24px;\">set mykey 0 60 5</td></tr><tr style=\"line-height: 24px;\"><td style=\"line-height: 24px;\">add</td><td style=\"line-height: 24px;\">Add a new key</td><td style=\"line-height: 24px;\">add newkey 0 60 5</td></tr><tr style=\"line-height: 24px;\"><td style=\"line-height: 24px;\">replace</td><td style=\"line-height: 24px;\">Overwrite existing key</td><td style=\"line-height: 24px;\">replace key 0 60 5</td></tr><tr style=\"line-height: 24px;\"><td style=\"line-height: 24px;\">append</td><td style=\"line-height: 24px;\">Append data to existing key</td><td style=\"line-height: 24px;\">append key 0 60 15</td></tr><tr style=\"line-height: 24px;\"><td style=\"line-height: 24px;\">prepend</td><td style=\"line-height: 24px;\">Prepend data to existing key</td><td style=\"line-height: 24px;\">prepend key 0 60 15</td></tr><tr style=\"line-height: 24px;\"><td style=\"line-height: 24px;\">incr</td><td style=\"line-height: 24px;\">Increments numerical key value by given number</td><td style=\"line-height: 24px;\">incr mykey 2</td></tr><tr style=\"line-height: 24px;\"><td style=\"line-height: 24px;\">decr</td><td style=\"line-height: 24px;\">Decrements numerical key value by given number</td><td style=\"line-height: 24px;\">decr mykey 5</td></tr><tr style=\"line-height: 24px;\"><td style=\"line-height: 24px;\">delete</td><td style=\"line-height: 24px;\">Deletes an existing key</td><td style=\"line-height: 24px;\">delete mykey</td></tr><tr style=\"line-height: 24px;\"><td rowspan=\"2\" style=\"line-height: 24px;\">flush_all</td><td style=\"line-height: 24px;\">Invalidate specific items immediately</td><td style=\"line-height: 24px;\">flush_all</td></tr><tr style=\"line-height: 24px;\"><td style=\"line-height: 24px;\">Invalidate all items in n seconds</td><td style=\"line-height: 24px;\">flush_all 900</td></tr><tr style=\"line-height: 24px;\"><td rowspan=\"7\" style=\"line-height: 24px;\">stats</td><td style=\"line-height: 24px;\">Prints general statistics</td><td style=\"line-height: 24px;\">stats</td></tr><tr style=\"line-height: 24px;\"><td style=\"line-height: 24px;\">Prints memory statistics</td><td style=\"line-height: 24px;\">stats slabs</td></tr><tr style=\"line-height: 24px;\"><td style=\"line-height: 24px;\">Prints memory statistics</td><td style=\"line-height: 24px;\">stats malloc</td></tr><tr style=\"line-height: 24px;\"><td style=\"line-height: 24px;\">Print higher level allocation statistics</td><td style=\"line-height: 24px;\">stats items</td></tr><tr style=\"line-height: 24px;\"><td style=\"line-height: 24px;\">&nbsp;<wbr></td><td style=\"line-height: 24px;\">stats detail</td></tr><tr style=\"line-height: 24px;\"><td style=\"line-height: 24px;\">&nbsp;<wbr></td><td style=\"line-height: 24px;\">stats sizes</td></tr><tr style=\"line-height: 24px;\"><td style=\"line-height: 24px;\">Resets statistics</td><td style=\"line-height: 24px;\">stats reset</td></tr><tr style=\"line-height: 24px;\"><td style=\"line-height: 24px;\">version</td><td style=\"line-height: 24px;\">Prints server version.</td><td style=\"line-height: 24px;\">version</td></tr><tr style=\"line-height: 24px;\"><td style=\"line-height: 24px;\">verbosity</td><td style=\"line-height: 24px;\">Increases log level</td><td style=\"line-height: 24px;\">verbosity</td></tr><tr style=\"line-height: 24px;\"><td style=\"line-height: 24px;\">quit</td><td style=\"line-height: 24px;\">Terminate telnet session</td><td style=\"line-height: 24px;\">quit</td></tr></tbody></table><p style=\"color: rgb(54, 46, 43); font-family: Arial; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"></p><p style=\"color: rgb(54, 46, 43); font-family: Arial; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><br></p><p style=\"color: rgb(54, 46, 43); font-family: Arial; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255); padding: 0px; line-height: 26px; margin: 0px 0px 1em;\"><strong>3.2 telnet请求命令格式</strong></p><p style=\"color: rgb(54, 46, 43); font-family: Arial; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255); padding: 0px; line-height: 26px; margin: 0px 0px 1em;\"><span style=\"color: rgb(0, 0, 255);\">&lt;command name&gt; &lt;key&gt; &lt;flags&gt; &lt;exptime&gt; &lt;bytes&gt;\\r\\n &lt;data block&gt;\\r\\n</span><br><span style=\"color: rgb(255, 0, 0);\">a) &lt;command name&gt; 可以是”set”, “add”, “replace”</span>。<br>“set”表示按照相应的&lt;key&gt;存储该数据，没有的时候增加，有的覆盖。<br>“add”表示按照相应的&lt;key&gt;添加该数据,但是如果该&lt;key&gt;已经存在则会操作失败。<br>“replace”表示按照相应的&lt;key&gt;替换数据,但是如果该&lt;key&gt;不存在则操作失败</p><p style=\"color: rgb(54, 46, 43); font-family: Arial; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255); padding: 0px; line-height: 26px; margin: 0px 0px 1em;\">b) &lt;key&gt; 客户端需要保存数据的key。</p><p style=\"color: rgb(54, 46, 43); font-family: Arial; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255); padding: 0px; line-height: 26px; margin: 0px 0px 1em;\">c) &lt;flags&gt; 是一个16位的无符号的整数(以十进制的方式表示)。<br>该标志将和需要存储的数据一起存储,并在客户端get数据时返回。<br>客户可以将此标志用做特殊用途，此标志对服务器来说是不透明的。</p><p style=\"color: rgb(54, 46, 43); font-family: Arial; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255); padding: 0px; line-height: 26px; margin: 0px 0px 1em;\"><span style=\"color: rgb(255, 0, 0);\">d) &lt;exptime&gt; 过期的时间。</span><br>若为0表示存储的数据永远不过时(但可被服务器<a href=\"http://lib.csdn.net/base/datastructure\" class=\"replace_word\" title=\"算法与数据结构知识库\" target=\"_blank\" style=\"color: rgb(223, 52, 52); text-decoration: none; font-weight: bold;\">算法</a>：LRU 等替换)。<br>如果非0(unix时间或者距离此时的秒数),当过期后,服务器可以保证用户得不到该数据(以服务器时间为标准)。</p><p style=\"color: rgb(54, 46, 43); font-family: Arial; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255); padding: 0px; line-height: 26px; margin: 0px 0px 1em;\">e) &lt;bytes&gt; 需要存储的字节数(不包含最后的”\\r\\n”),当用户希望存储空数据时,&lt;bytes&gt;可以为0</p><p style=\"color: rgb(54, 46, 43); font-family: Arial; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255); padding: 0px; line-height: 26px; margin: 0px 0px 1em;\"><span style=\"color: rgb(255, 0, 0);\">f) 最后客户端需要加上”\\r\\n”作为”命令头”的结束标志。</span><br>&lt;data block&gt;\\r\\n</p><p style=\"color: rgb(54, 46, 43); font-family: Arial; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255); padding: 0px; line-height: 26px; margin: 0px 0px 1em;\">紧接着”命令头”结束之后就要发送数据块(即希望存储的数据内容),最后加上”\\r\\n”作为此次通讯的结束。</p><p style=\"color: rgb(54, 46, 43); font-family: Arial; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255); padding: 0px; line-height: 26px; margin: 0px 0px 1em;\"><strong>3.3 telnet响应命令</strong></p><p style=\"color: rgb(54, 46, 43); font-family: Arial; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255); padding: 0px; line-height: 26px; margin: 0px 0px 1em;\">结果响应：reply<br>当以上数据发送结束之后,服务器将返回一个应答。可能有如下的情况:</p><p style=\"color: rgb(54, 46, 43); font-family: Arial; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255); padding: 0px; line-height: 26px; margin: 0px 0px 1em;\">a) “STORED\\r\\n”：表示存储成功<br>b) “NOT_STORED\\r\\n” ： 表示存储失败,但是该失败不是由于错误。<br>通常这是由于”add”或者”replace”命令本身的要求所引起的,或者该项在删除队列之中。</p><p style=\"color: rgb(54, 46, 43); font-family: Arial; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255); padding: 0px; line-height: 26px; margin: 0px 0px 1em;\">如： set key 33 0 4\\r\\n<br>ffff\\r\\n</p><p style=\"color: rgb(54, 46, 43); font-family: Arial; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255); padding: 0px; line-height: 26px; margin: 0px 0px 1em;\"><span style=\"color: rgb(255, 0, 0);\"><strong>4、获取/检查KeyValue</strong></span><br>get &lt;key&gt;*\\r\\n<br>a) &lt;key&gt;* 表示一个或者多个key(以空格分开)<br>b) “\\r\\n” 命令头的结束</p><p style=\"color: rgb(54, 46, 43); font-family: Arial; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255); padding: 0px; line-height: 26px; margin: 0px 0px 1em;\">结果响应：reply<br>服务器端将返回0个或者多个的数据项。每个数据项都是由一个文本行和一个数据块组成。当所有的数据项都接收完毕将收到”END\\r\\n”<br>每一项的<a href=\"http://lib.csdn.net/base/datastructure\" class=\"replace_word\" title=\"算法与数据结构知识库\" target=\"_blank\" style=\"color: rgb(223, 52, 52); text-decoration: none; font-weight: bold;\">数据结构</a>：<br>VALUE &lt;key&gt; &lt;flags&gt; &lt;bytes&gt;\\r\\n<br>&lt;data block&gt;\\r\\n</p><p style=\"color: rgb(54, 46, 43); font-family: Arial; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255); padding: 0px; line-height: 26px; margin: 0px 0px 1em;\">a) &lt;key&gt; 希望得到存储数据的key<br>b) &lt;falg&gt; 发送set命令时设置的标志项<br>c) &lt;bytes&gt; 发送数据块的长度(不包含”\\r\\n”)<br>d) “\\r\\n” 文本行的结束标志<br>e) &lt;data block&gt; 希望接收的数据项。<br>f) “\\r\\n” 接收一个数据项的结束标志。</p><p style=\"color: rgb(54, 46, 43); font-family: Arial; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255); padding: 0px; line-height: 26px; margin: 0px 0px 1em;\">如果有些key出现在get命令行中但是没有返回相应的数据，这意味着服务器中不存在这些项，这些项过时了，或者被删除了<br>如：get aa<br>VALUE aa 33 4<br>ffff<br>END</p><p style=\"color: rgb(54, 46, 43); font-family: Arial; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255); padding: 0px; line-height: 26px; margin: 0px 0px 1em;\"><strong>5、删除KeyValue：</strong><br>delete &lt;key&gt; &lt;time&gt;\\r\\n</p><p style=\"color: rgb(54, 46, 43); font-family: Arial; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255); padding: 0px; line-height: 26px; margin: 0px 0px 1em;\">a) &lt;key&gt; 需要被删除数据的key<br>b) &lt;time&gt; 客户端希望服务器将该数据删除的时间(unix时间或者从现在开始的秒数)<br>c) “\\r\\n” 命令头的结束</p><p style=\"color: rgb(54, 46, 43); font-family: Arial; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255); padding: 0px; line-height: 26px; margin: 0px 0px 1em;\"><span style=\"color: rgb(255, 0, 0);\"><strong>6、检查Memcache服务器状态：</strong></span><br>stats\\r\\n<br>在这里可以看到memcache的获取次数，当前连接数，写入次数，已经命中率等；</p><p style=\"color: rgb(54, 46, 43); font-family: Arial; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255); padding: 0px; line-height: 26px; margin: 0px 0px 1em;\">pid ： 进程id<br>uptime ：总的运行时间，秒数<br>time ： 当前时间<br>version ： 版本号<br>……<br>curr_items ： 当前缓存中的KeyValue数量<br>total_items ： 曾经总共经过缓存的KeyValue数量<br>bytes ： 所有的缓存使用的内存量<br>curr_connections 当前连接数<br>….<br>cmd_get ： 总获取次数<br>cmd_set ： 总的写入次数<br>get_hits ： 总的命中次数<br>miss_hits :&nbsp;<wbr>&nbsp;获取失败次数<br>…..<br>bytes_read ： 总共读取的流量字节数<br>bytes_written ： 总的写入流量字节<br>limit_maxbytes ： 最大允许使用的内存量，字节</p><p style=\"color: rgb(54, 46, 43); font-family: Arial; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255); padding: 0px; line-height: 26px; margin: 0px 0px 1em;\"><span style=\"color: rgb(255, 0, 0);\"><strong>7、高级缓存细节查看方法：</strong></span><br>stats reset<br>清空统计数据</p><p style=\"color: rgb(54, 46, 43); font-family: Arial; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255); padding: 0px; line-height: 26px; margin: 0px 0px 1em;\">stats malloc<br>显示内存分配数据</p><p style=\"color: rgb(54, 46, 43); font-family: Arial; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255); padding: 0px; line-height: 26px; margin: 0px 0px 1em;\">stats cachedump slab_id limit_num<br>显示某个slab中的前limit_num个key列表，显示格式如下<br>ITEM key_name [ value_length b; expire_time|access_time s]<br>其中，memcached 1.2.2及以前版本显示的是&nbsp;<wbr>&nbsp;访问时间(timestamp)<br>1.2.4以上版本，包括1.2.4显示 过期时间(timestamp)<br>如果是永不过期的key，expire_time会显示为服务器启动的时间</p><p style=\"color: rgb(54, 46, 43); font-family: Arial; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255); padding: 0px; line-height: 26px; margin: 0px 0px 1em;\">stats cachedump 7 2<br>ITEM copy_test1 [250 b; 1207795754 s]<br>ITEM copy_test [248 b; 1207793649 s]</p><p style=\"color: rgb(54, 46, 43); font-family: Arial; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255); padding: 0px; line-height: 26px; margin: 0px 0px 1em;\">stats slabs<br>显示各个slab的信息，包括chunk的大小、数目、使用情况等</p><p style=\"color: rgb(54, 46, 43); font-family: Arial; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255); padding: 0px; line-height: 26px; margin: 0px 0px 1em;\">stats items<br>显示各个slab中item的数目和最老item的年龄(最后一次访问距离现在的秒数)</p><p style=\"color: rgb(54, 46, 43); font-family: Arial; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255); padding: 0px; line-height: 26px; margin: 0px 0px 1em;\">stats detail [on|off|dump]<br>设置或者显示详细操作记录</p><p style=\"color: rgb(54, 46, 43); font-family: Arial; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255); padding: 0px; line-height: 26px; margin: 0px 0px 1em;\">参数为on，打开详细操作记录<br>参数为off，关闭详细操作记录<br>参数为dump，显示详细操作记录(每一个键值get、set、hit、del的次数)</p><p style=\"color: rgb(54, 46, 43); font-family: Arial; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255); padding: 0px; line-height: 26px; margin: 0px 0px 1em;\"><span style=\"color: rgb(255, 0, 0);\"><strong>8、清空所有键值</strong></span><br>flush_all<br>注：flush并不会将items删除，只是将所有的items标记为expired，因此这时memcache依旧占用所有内存。</p><p style=\"color: rgb(54, 46, 43); font-family: Arial; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255); padding: 0px; line-height: 26px; margin: 0px 0px 1em;\"><span style=\"color: rgb(255, 0, 0);\"><strong>9、退出</strong></span><br>quit\\r\\n</p><div><br></div>"
    }
  ]
}
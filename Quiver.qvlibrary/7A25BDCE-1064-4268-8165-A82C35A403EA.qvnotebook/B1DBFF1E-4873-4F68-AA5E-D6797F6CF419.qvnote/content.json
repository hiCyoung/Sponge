{
  "title": "Java 知识点大纲",
  "cells": [
    {
      "type": "markdown",
      "data": "<h2>JVM规范</h2>\n\n<h3>class加载过程</h3>\nClassLoader，委托机制\n\n<h3>class file结构</h3>\n类似于C语言结构体的伪结构来存储，这种伪结构中只有两种数据类型：无符号数和表。具体包括：magic与version，常量池（constant_pool）,访问标志（access_flag）,方法表（method_info）,属性表（attribute_info）,存储字节码指令Code属性，源码与字节码行号关系LineNumberTable，Exception，LocalVariableTable，SourceFile，ConstantValue\n\n<h3>invoke指令</h3>\n\n\n## Servlet规范\n#### API\nListener, Servlet, Filter\n\n#### Servlet生命周期\ninit()：只会调用一次\nservice()：处理请求\ndestory()：Servlet容器终止运行时调用\n\n#### Servlet何时创建\n* 默认情况下，当WEB客户第一次请求访问某个Servlet的时候\n* web.xml文件中如果<servlet>元素中指定了<load-on-startup>子元素时，Servlet容器在启动web服务器时，将按照顺序创建并初始化Servlet对象，自动加载这些Servlet并调用init()方法，完成一些全局性的初始化工作。\n\n#### 异步Servlet\nAsyncContext.startAsync\n\n3 JVM\n\n 内存区域\n\n Java堆\n\n 方法区\n\n Java方法栈\n\n 本地方法栈\n\n GC代\n\n 新生代\n\n Eden\n\n Survivor\n\n 旧生代\n\n 持久代\n\n 不同类型GC\n\n Serial\n\n ParNew\n\n Parallel Scavenge\n\n Serial Old\n\n Parallel Old\n\n CMS\n\n G1\n\n Reference\n\n Strong\n\n Weak\n\n Soft\n\n JVM options\n\n OOM\n\n 常用java性能诊断工具\n\n jps\n\n jstat\n\n jmap\n\n jstack\n\n jinfo\n\n jConsole\n\n jVisualVM\n\n BTrace\n\n4 Java Concurrent\n\n keyword\n\n synchronized\n\n volatile\n\n 锁\n\n 原子性/可见性\n\n 并发相关的一些数据结构\n\n ConcurrentHashMap\n\n LinkedBlockQueue\n\n AtomicXxx\n\n Executor框架\n\n Future\n\n Java内存模型\n\n5 Java NIO\n\n Buffer\n\n Channel\n\n Selector\n\n6 集合类\n\n JDK内置的集合类的实现方式以及使用场景\n\n List\n\n ArrayList\n\n LinkedList\n\n Set\n\n HashSet\n\n LinkedSet\n\n TreeSet\n\n Map\n\n HashMap\n\n TreeMap\n\n 等"
    }
  ]
}